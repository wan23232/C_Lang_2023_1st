여러개의 단어를 읽어 포인터 배열을 이용하여 저장한다. 
각 스트링은 동적할당을 이용하여 최소의 공간을 할당한다. (2차원 배열을 쓰지 않는다)
단어의 최대 개수는 100개이며 한 단어의 최대의 길이는 영문 기준 
99글자(100 바이트 필요)로 가정한다. 실제 저장할 때는 스트링에 꼭 필요한 만큼의 메모리만을 할당받는다.

함수 sort를 만든다. 함수는 
void sort(char *wlist[], int size);
와 같은 형태를 가지게 되며 단어 들을 오름차순으로 정렬한다. (strcmp 이용, 비교)
main함수 측에서는
sort(word_list, numWords); 
과 같이 호출하면 된다.
호출에 의해 정렬이 되면 main에서 순서대로 출력한다.
출력함수 printall 을 만들고 printall(word_list, numWords); 처럼 호출하라.

데이터에 개수는 입력되지 않으니 EOF에 의해서 개수를 판단해야함.

버전1은 모든 스트링을 저장한 후 입력된 순서의 역순으로 출력하기 (나중 입력된 스트링 부터 출력)
버전2는 정렬후 알파벳 순으로 출력하기. (별도 버전으로 등록해야함)